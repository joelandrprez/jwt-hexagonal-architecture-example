/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 16-Jun.-2025 15:53:46 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Answer_Task]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Answer] DROP CONSTRAINT [FK_Answer_Task]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Ask_Issue]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Ask] DROP CONSTRAINT [FK_Ask_Issue]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Course_Entity]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Course] DROP CONSTRAINT [FK_Course_Entity]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Exam_ExamMode]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Exam] DROP CONSTRAINT [FK_Exam_ExamMode]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Exam_Subscription]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Exam] DROP CONSTRAINT [FK_Exam_Subscription]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Exam_TypeExam]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Exam] DROP CONSTRAINT [FK_Exam_TypeExam]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ExamAsk_Ask]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ExamAsk] DROP CONSTRAINT [FK_ExamAsk_Ask]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ExamAsk_Exam]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ExamAsk] DROP CONSTRAINT [FK_ExamAsk_Exam]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Issue_Topic]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Issue] DROP CONSTRAINT [FK_Issue_Topic]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Session_Users]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Session] DROP CONSTRAINT [FK_Session_Users]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Subscription_StatusSubcription]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Subscription] DROP CONSTRAINT [FK_Subscription_StatusSubcription]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Subscription_Users]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Subscription] DROP CONSTRAINT [FK_Subscription_Users]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Topic_Course]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Topic] DROP CONSTRAINT [FK_Topic_Course]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UserAnswerOptions_ExamAsk]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UserAnswerOptions] DROP CONSTRAINT [FK_UserAnswerOptions_ExamAsk]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UsersRol_Rol]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UsersRol] DROP CONSTRAINT [FK_UsersRol_Rol]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_UsersRol_Users]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [UsersRol] DROP CONSTRAINT [FK_UsersRol_Users]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Answer]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Answer]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Ask]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Ask]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Course]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Course]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Entity]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Entity]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Exam]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Exam]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ExamAsk]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ExamAsk]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ExamMode]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ExamMode]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Issue]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Issue]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Rol]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Rol]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Session]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Session]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[StatusSubcription]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [StatusSubcription]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Subscription]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Subscription]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Topic]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Topic]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TypeExam]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TypeExam]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[UserAnswerOptions]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [UserAnswerOptions]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Users]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Users]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[UsersRol]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [UsersRol]
GO

/* Create Tables */

CREATE TABLE [Answer]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Description] varchar(150) NULL,
	[Letter] char(1) NULL,
	[Correct] bit NULL,
	[TaskId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Ask]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Description] varchar(150) NULL,
	[IssueId] int NULL,
	[State] bit NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Course]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[EntityId] int NULL,
	[QuestionCount] int NULL,
	[TimeMinute] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Entity]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Exam]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[ModeExamId] int NULL,
	[TypeExamId] int NULL,
	[ExamId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [ExamAsk]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[Correct] bit NULL,
	[AskId] int NULL,
	[ExamId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [ExamMode]
(
	[Id] int NOT NULL,
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Issue]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[TopicId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Rol]
(
	[Id] int NOT NULL,
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Session]
(
	[Id] bigint NOT NULL IDENTITY (1, 1),
	[IpSession] varchar(50) NULL,
	[Token] varchar(8000) NULL,
	[IssueDate] datetime NULL,
	[ExpirationDate] datetime NULL,
	[IsEnabled] bit NULL,
	[UsersId] uniqueidentifier NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [StatusSubcription]
(
	[Id] int NOT NULL,
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Subscription]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[ExpirationDate] date NULL,
	[SubscriptionDate] datetime NULL,
	[CourseId] int NULL,
	[StatusId] int NULL,
	[UserId] uniqueidentifier NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Topic]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CourseId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [TypeExam]
(
	[Id] int NOT NULL,
	[Name] varchar(50) NULL,
	[Description] varchar(150) NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [UserAnswerOptions]
(
	[Id] int NOT NULL IDENTITY (1, 1),
	[Answer] int NULL,
	[ExamAskId] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [Users]
(
	[Id] uniqueidentifier NOT NULL,
	[FirstName] varchar(100) NULL,
	[LastName] varchar(100) NULL,
	[Email] varchar(256) NULL,
	[Password] varchar(8000) NULL,
	[PhoneNumber] varchar(20) NULL,
	[Address] varchar(510) NULL,
	[DateOfBirth] date NULL,
	[IsActive] bit NULL,
	[LoginAttempts] int NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[UpdatedAt] datetime NULL,
	[UpdatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

CREATE TABLE [UsersRol]
(
	[UsersId] uniqueidentifier NOT NULL,
	[RolId] int NOT NULL,
	[CreatedAt] datetime NULL,
	[CreatedBy] varchar(50) NULL,
	[DeletedAt] datetime NULL,
	[DeletedBy] varchar(50) NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Answer] 
 ADD CONSTRAINT [PK_Answer]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Answer_Task] 
 ON [Answer] ([TaskId] ASC)
GO

ALTER TABLE [Ask] 
 ADD CONSTRAINT [PK_Ask]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Ask_Issue] 
 ON [Ask] ([IssueId] ASC)
GO

ALTER TABLE [Course] 
 ADD CONSTRAINT [PK_Course]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Course_Entity] 
 ON [Course] ([EntityId] ASC)
GO

ALTER TABLE [Entity] 
 ADD CONSTRAINT [PK_Entity]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [Exam] 
 ADD CONSTRAINT [PK_Exam]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Exam_ExamMode] 
 ON [Exam] ([ModeExamId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Exam_Subscription] 
 ON [Exam] ([ExamId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Exam_TypeExam] 
 ON [Exam] ([TypeExamId] ASC)
GO

ALTER TABLE [ExamAsk] 
 ADD CONSTRAINT [PK_ExamAsk]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ExamAsk_Ask] 
 ON [ExamAsk] ([ExamId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ExamAsk_Exam] 
 ON [ExamAsk] ([ExamId] ASC)
GO

ALTER TABLE [ExamMode] 
 ADD CONSTRAINT [PK_ExamMode]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [Issue] 
 ADD CONSTRAINT [PK_Tema]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Issue_Topic] 
 ON [Issue] ([TopicId] ASC)
GO

ALTER TABLE [Rol] 
 ADD CONSTRAINT [PK_Rol]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [Session] 
 ADD CONSTRAINT [PK_Session]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Session_Users] 
 ON [Session] ([UsersId] ASC)
GO

ALTER TABLE [StatusSubcription] 
 ADD CONSTRAINT [PK_StatusSubcription]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [Subscription] 
 ADD CONSTRAINT [PK_Subscription]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Subscription_Course] 
 ON [Subscription] ([CourseId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Subscription_StatusSubcription] 
 ON [Subscription] ([StatusId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Subscription_Users] 
 ON [Subscription] ([UserId] ASC)
GO

ALTER TABLE [Topic] 
 ADD CONSTRAINT [PK_Topic]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Topic_Course] 
 ON [Topic] ([CourseId] ASC)
GO

ALTER TABLE [TypeExam] 
 ADD CONSTRAINT [PK_TypeExam]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [UserAnswerOptions] 
 ADD CONSTRAINT [PK_UserAnswerOptions]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_UserAnswerOptions_ExamAsk] 
 ON [UserAnswerOptions] ([ExamAskId] ASC)
GO

ALTER TABLE [Users] 
 ADD CONSTRAINT [PK_Users]
	PRIMARY KEY CLUSTERED ([Id] ASC)
GO

ALTER TABLE [UsersRol] 
 ADD CONSTRAINT [PK_UsersRol]
	PRIMARY KEY CLUSTERED ([UsersId] ASC,[RolId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_UsersRol_Rol] 
 ON [UsersRol] ([RolId] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_UsersRol_Users] 
 ON [UsersRol] ([UsersId] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Answer] ADD CONSTRAINT [FK_Answer_Task]
	FOREIGN KEY ([TaskId]) REFERENCES [Ask] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Ask] ADD CONSTRAINT [FK_Ask_Issue]
	FOREIGN KEY ([IssueId]) REFERENCES [Issue] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Course] ADD CONSTRAINT [FK_Course_Entity]
	FOREIGN KEY ([EntityId]) REFERENCES [Entity] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Exam] ADD CONSTRAINT [FK_Exam_ExamMode]
	FOREIGN KEY ([ModeExamId]) REFERENCES [ExamMode] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Exam] ADD CONSTRAINT [FK_Exam_Subscription]
	FOREIGN KEY ([ExamId]) REFERENCES [Subscription] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Exam] ADD CONSTRAINT [FK_Exam_TypeExam]
	FOREIGN KEY ([TypeExamId]) REFERENCES [TypeExam] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ExamAsk] ADD CONSTRAINT [FK_ExamAsk_Ask]
	FOREIGN KEY ([ExamId]) REFERENCES [Ask] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ExamAsk] ADD CONSTRAINT [FK_ExamAsk_Exam]
	FOREIGN KEY ([ExamId]) REFERENCES [Exam] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Issue] ADD CONSTRAINT [FK_Issue_Topic]
	FOREIGN KEY ([TopicId]) REFERENCES [Topic] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Session] ADD CONSTRAINT [FK_Session_Users]
	FOREIGN KEY ([UsersId]) REFERENCES [Users] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Subscription] ADD CONSTRAINT [FK_Subscription_StatusSubcription]
	FOREIGN KEY ([StatusId]) REFERENCES [StatusSubcription] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Subscription] ADD CONSTRAINT [FK_Subscription_Users]
	FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Topic] ADD CONSTRAINT [FK_Topic_Course]
	FOREIGN KEY ([CourseId]) REFERENCES [Course] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UserAnswerOptions] ADD CONSTRAINT [FK_UserAnswerOptions_ExamAsk]
	FOREIGN KEY ([ExamAskId]) REFERENCES [ExamAsk] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UsersRol] ADD CONSTRAINT [FK_UsersRol_Rol]
	FOREIGN KEY ([RolId]) REFERENCES [Rol] ([Id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [UsersRol] ADD CONSTRAINT [FK_UsersRol_Users]
	FOREIGN KEY ([UsersId]) REFERENCES [Users] ([Id]) ON DELETE No Action ON UPDATE No Action
GO
